# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Notification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subscription_id=None, user_id=None, healthcare_provider_id=None, notification_type=None, subscription_start_date=None, subscription_end_date=None):  # noqa: E501
        """Notification - a model defined in OpenAPI

        :param subscription_id: The subscription_id of this Notification.  # noqa: E501
        :type subscription_id: str
        :param user_id: The user_id of this Notification.  # noqa: E501
        :type user_id: str
        :param healthcare_provider_id: The healthcare_provider_id of this Notification.  # noqa: E501
        :type healthcare_provider_id: str
        :param notification_type: The notification_type of this Notification.  # noqa: E501
        :type notification_type: NotificationType
        :param subscription_start_date: The subscription_start_date of this Notification.  # noqa: E501
        :type subscription_start_date: date
        :param subscription_end_date: The subscription_end_date of this Notification.  # noqa: E501
        :type subscription_end_date: date
        """
        self.openapi_types = {
            'subscription_id': str,
            'user_id': str,
            'healthcare_provider_id': str,
            'notification_type': NotificationType,
            'subscription_start_date': date,
            'subscription_end_date': date
        }

        self.attribute_map = {
            'subscription_id': 'subscription_id',
            'user_id': 'user_id',
            'healthcare_provider_id': 'healthcare_provider_id',
            'notification_type': 'notification_type',
            'subscription_start_date': 'subscription_start_date',
            'subscription_end_date': 'subscription_end_date'
        }

        self._subscription_id = subscription_id
        self._user_id = user_id
        self._healthcare_provider_id = healthcare_provider_id
        self._notification_type = notification_type
        self._subscription_start_date = subscription_start_date
        self._subscription_end_date = subscription_end_date

    @classmethod
    def from_dict(cls, dikt) -> 'Notification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Notification of this Notification.  # noqa: E501
        :rtype: Notification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subscription_id(self):
        """Gets the subscription_id of this Notification.


        :return: The subscription_id of this Notification.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this Notification.


        :param subscription_id: The subscription_id of this Notification.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def user_id(self):
        """Gets the user_id of this Notification.


        :return: The user_id of this Notification.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Notification.


        :param user_id: The user_id of this Notification.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def healthcare_provider_id(self):
        """Gets the healthcare_provider_id of this Notification.


        :return: The healthcare_provider_id of this Notification.
        :rtype: str
        """
        return self._healthcare_provider_id

    @healthcare_provider_id.setter
    def healthcare_provider_id(self, healthcare_provider_id):
        """Sets the healthcare_provider_id of this Notification.


        :param healthcare_provider_id: The healthcare_provider_id of this Notification.
        :type healthcare_provider_id: str
        """

        self._healthcare_provider_id = healthcare_provider_id

    @property
    def notification_type(self):
        """Gets the notification_type of this Notification.


        :return: The notification_type of this Notification.
        :rtype: NotificationType
        """
        return self._notification_type

    @notification_type.setter
    def notification_type(self, notification_type):
        """Sets the notification_type of this Notification.


        :param notification_type: The notification_type of this Notification.
        :type notification_type: NotificationType
        """

        self._notification_type = notification_type

    @property
    def subscription_start_date(self):
        """Gets the subscription_start_date of this Notification.


        :return: The subscription_start_date of this Notification.
        :rtype: date
        """
        return self._subscription_start_date

    @subscription_start_date.setter
    def subscription_start_date(self, subscription_start_date):
        """Sets the subscription_start_date of this Notification.


        :param subscription_start_date: The subscription_start_date of this Notification.
        :type subscription_start_date: date
        """

        self._subscription_start_date = subscription_start_date

    @property
    def subscription_end_date(self):
        """Gets the subscription_end_date of this Notification.


        :return: The subscription_end_date of this Notification.
        :rtype: date
        """
        return self._subscription_end_date

    @subscription_end_date.setter
    def subscription_end_date(self, subscription_end_date):
        """Sets the subscription_end_date of this Notification.


        :param subscription_end_date: The subscription_end_date of this Notification.
        :type subscription_end_date: date
        """

        self._subscription_end_date = subscription_end_date
