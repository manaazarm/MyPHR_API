# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Address(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_id=None, address_type=None, client_id=None, healthcare_provider_id=None, is_active=None, start_date=None, end_date=None, country=None, city=None, street_type=None, street_number=None, unit_number=None, postal_code=None):  # noqa: E501
        """Address - a model defined in OpenAPI

        :param address_id: The address_id of this Address.  # noqa: E501
        :type address_id: str
        :param address_type: The address_type of this Address.  # noqa: E501
        :type address_type: str
        :param client_id: The client_id of this Address.  # noqa: E501
        :type client_id: str
        :param healthcare_provider_id: The healthcare_provider_id of this Address.  # noqa: E501
        :type healthcare_provider_id: str
        :param is_active: The is_active of this Address.  # noqa: E501
        :type is_active: bool
        :param start_date: The start_date of this Address.  # noqa: E501
        :type start_date: date
        :param end_date: The end_date of this Address.  # noqa: E501
        :type end_date: date
        :param country: The country of this Address.  # noqa: E501
        :type country: str
        :param city: The city of this Address.  # noqa: E501
        :type city: str
        :param street_type: The street_type of this Address.  # noqa: E501
        :type street_type: str
        :param street_number: The street_number of this Address.  # noqa: E501
        :type street_number: str
        :param unit_number: The unit_number of this Address.  # noqa: E501
        :type unit_number: str
        :param postal_code: The postal_code of this Address.  # noqa: E501
        :type postal_code: str
        """
        self.openapi_types = {
            'address_id': str,
            'address_type': str,
            'client_id': str,
            'healthcare_provider_id': str,
            'is_active': bool,
            'start_date': date,
            'end_date': date,
            'country': str,
            'city': str,
            'street_type': str,
            'street_number': str,
            'unit_number': str,
            'postal_code': str
        }

        self.attribute_map = {
            'address_id': 'address_id',
            'address_type': 'address_type',
            'client_id': 'client_id',
            'healthcare_provider_id': 'healthcare_provider_id',
            'is_active': 'is_active',
            'start_date': 'start_date',
            'end_date': 'end_date',
            'country': 'country',
            'city': 'city',
            'street_type': 'street_type',
            'street_number': 'street_number',
            'unit_number': 'unit_number',
            'postal_code': 'postal_code'
        }

        self._address_id = address_id
        self._address_type = address_type
        self._client_id = client_id
        self._healthcare_provider_id = healthcare_provider_id
        self._is_active = is_active
        self._start_date = start_date
        self._end_date = end_date
        self._country = country
        self._city = city
        self._street_type = street_type
        self._street_number = street_number
        self._unit_number = unit_number
        self._postal_code = postal_code

    @classmethod
    def from_dict(cls, dikt) -> 'Address':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Address of this Address.  # noqa: E501
        :rtype: Address
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_id(self):
        """Gets the address_id of this Address.


        :return: The address_id of this Address.
        :rtype: str
        """
        return self._address_id

    @address_id.setter
    def address_id(self, address_id):
        """Sets the address_id of this Address.


        :param address_id: The address_id of this Address.
        :type address_id: str
        """

        self._address_id = address_id

    @property
    def address_type(self):
        """Gets the address_type of this Address.

        e.g. mailing, home, temporary etc.  # noqa: E501

        :return: The address_type of this Address.
        :rtype: str
        """
        return self._address_type

    @address_type.setter
    def address_type(self, address_type):
        """Sets the address_type of this Address.

        e.g. mailing, home, temporary etc.  # noqa: E501

        :param address_type: The address_type of this Address.
        :type address_type: str
        """

        self._address_type = address_type

    @property
    def client_id(self):
        """Gets the client_id of this Address.


        :return: The client_id of this Address.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this Address.


        :param client_id: The client_id of this Address.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def healthcare_provider_id(self):
        """Gets the healthcare_provider_id of this Address.


        :return: The healthcare_provider_id of this Address.
        :rtype: str
        """
        return self._healthcare_provider_id

    @healthcare_provider_id.setter
    def healthcare_provider_id(self, healthcare_provider_id):
        """Sets the healthcare_provider_id of this Address.


        :param healthcare_provider_id: The healthcare_provider_id of this Address.
        :type healthcare_provider_id: str
        """

        self._healthcare_provider_id = healthcare_provider_id

    @property
    def is_active(self):
        """Gets the is_active of this Address.


        :return: The is_active of this Address.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this Address.


        :param is_active: The is_active of this Address.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def start_date(self):
        """Gets the start_date of this Address.


        :return: The start_date of this Address.
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this Address.


        :param start_date: The start_date of this Address.
        :type start_date: date
        """

        self._start_date = start_date

    @property
    def end_date(self):
        """Gets the end_date of this Address.


        :return: The end_date of this Address.
        :rtype: date
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this Address.


        :param end_date: The end_date of this Address.
        :type end_date: date
        """

        self._end_date = end_date

    @property
    def country(self):
        """Gets the country of this Address.


        :return: The country of this Address.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this Address.


        :param country: The country of this Address.
        :type country: str
        """

        self._country = country

    @property
    def city(self):
        """Gets the city of this Address.


        :return: The city of this Address.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this Address.


        :param city: The city of this Address.
        :type city: str
        """

        self._city = city

    @property
    def street_type(self):
        """Gets the street_type of this Address.


        :return: The street_type of this Address.
        :rtype: str
        """
        return self._street_type

    @street_type.setter
    def street_type(self, street_type):
        """Sets the street_type of this Address.


        :param street_type: The street_type of this Address.
        :type street_type: str
        """

        self._street_type = street_type

    @property
    def street_number(self):
        """Gets the street_number of this Address.


        :return: The street_number of this Address.
        :rtype: str
        """
        return self._street_number

    @street_number.setter
    def street_number(self, street_number):
        """Sets the street_number of this Address.


        :param street_number: The street_number of this Address.
        :type street_number: str
        """

        self._street_number = street_number

    @property
    def unit_number(self):
        """Gets the unit_number of this Address.


        :return: The unit_number of this Address.
        :rtype: str
        """
        return self._unit_number

    @unit_number.setter
    def unit_number(self, unit_number):
        """Sets the unit_number of this Address.


        :param unit_number: The unit_number of this Address.
        :type unit_number: str
        """

        self._unit_number = unit_number

    @property
    def postal_code(self):
        """Gets the postal_code of this Address.


        :return: The postal_code of this Address.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this Address.


        :param postal_code: The postal_code of this Address.
        :type postal_code: str
        """

        self._postal_code = postal_code
