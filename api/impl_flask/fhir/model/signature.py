# -*- coding: utf-8 -*-
from __future__ import print_function
import datetime as dt
import logging

from . import Property
from . import FHIRBase, Element, Extension, Reference


from ._base64binary import base64Binary
from ._code import code
from ._instant import instant

from .coding import Coding

__author__ = "Melle Sieswerda"
__copyright__  = "Copyright 2017, Melle Sieswerda"
__license__ = "GPL"
__version__ = "0.8"

__all__ = ['Signature']


# ------------------------------------------------------------------------------
# Signature
# ------------------------------------------------------------------------------
class Signature(Element):
    """
    A signature along with supporting context. The signature may be a
    digital signature that is cryptographic in nature, or some other
    signature acceptable to the domain. This other signature may be as
    simple as a graphical image representing a hand-written signature, or
    a signature ceremony Different signature approaches have different
    utilities.
    
    Autogenerated class.
    """
    _url = 'http://hl7.org/fhir/StructureDefinition/Signature'
    
    type = Property('type', Coding, '1', '*')
    when = Property('when', instant, '1', '1')
    who = Property('who', Reference("http://hl7.org/fhir/StructureDefinition/Practitioner", "http://hl7.org/fhir/StructureDefinition/PractitionerRole", "http://hl7.org/fhir/StructureDefinition/RelatedPerson", "http://hl7.org/fhir/StructureDefinition/Patient", "http://hl7.org/fhir/StructureDefinition/Device", "http://hl7.org/fhir/StructureDefinition/Organization"), '1', '1')
    onBehalfOf = Property('onBehalfOf', Reference("http://hl7.org/fhir/StructureDefinition/Practitioner", "http://hl7.org/fhir/StructureDefinition/PractitionerRole", "http://hl7.org/fhir/StructureDefinition/RelatedPerson", "http://hl7.org/fhir/StructureDefinition/Patient", "http://hl7.org/fhir/StructureDefinition/Device", "http://hl7.org/fhir/StructureDefinition/Organization"), '0', '1')
    targetFormat = Property('targetFormat', code, '0', '1')
    sigFormat = Property('sigFormat', code, '0', '1')
    data = Property('data', base64Binary, '0', '1')
